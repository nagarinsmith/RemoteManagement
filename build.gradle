
buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}
repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
    mavenLocal()
    maven { url "https://dl.bintray.com/kotlin/kotlin-js-wrappers" }
}
def ktor_version = '1.1.3'
def logback_version = '1.2.3'

kotlin {
    jvm()
    js {
        browser {
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation 'com.pi4j:pi4j-core:1.2'
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
    }
}

jvmJar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    dependsOn(jsBrowserProductionWebpack)
    from { configurations.jvmRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from(new File(jsBrowserProductionWebpack.entry.name, jsBrowserProductionWebpack.outputPath))
}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "MainKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    args = []
}